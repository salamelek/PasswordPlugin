/* global text */

function convertBinToStr(binToConvert) {
    let data = {
        "0000000": " ",
        "0000001": "!",
        "0000010": "\"",
        "0000011": "#",
        "0000100": "$",
        "0000101": "%",
        "0000110": "&",
        "0000111": "'",
        "0001000": "(",
        "0001001": ")",
        "0001010": "*",
        "0001011": "+",
        "0001100": ",",
        "0001101": "-",
        "0001110": ".",
        "0001111": "/",
        "0010000": "0",
        "0010001": "1",
        "0010010": "2",
        "0010011": "3",
        "0010100": "4",
        "0010101": "5",
        "0010110": "6",
        "0010111": "7",
        "0011000": "8",
        "0011001": "9",
        "0011010": ":",
        "0011011": ";",
        "0011100": "<",
        "0011101": "=",
        "0011110": ">",
        "0011111": "?",
        "0100000": "@",
        "0100001": "A",
        "0100010": "B",
        "0100011": "C",
        "0100100": "D",
        "0100101": "E",
        "0100110": "F",
        "0100111": "G",
        "0101000": "H",
        "0101001": "I",
        "0101010": "J",
        "0101011": "K",
        "0101100": "L",
        "0101101": "M",
        "0101110": "N",
        "0101111": "O",
        "0110000": "P",
        "0110001": "Q",
        "0110010": "R",
        "0110011": "S",
        "0110100": "T",
        "0110101": "U",
        "0110110": "V",
        "0110111": "W",
        "0111000": "X",
        "0111001": "Y",
        "0111010": "Z",
        "0111011": "[",
        "0111100": "\\",
        "0111101": "]",
        "0111110": "^",
        "0111111": "_",
        "1000000": "`",
        "1000001": "a",
        "1000010": "b",
        "1000011": "c",
        "1000100": "d",
        "1000101": "e",
        "1000110": "f",
        "1000111": "g",
        "1001000": "h",
        "1001001": "i",
        "1001010": "j",
        "1001011": "k",
        "1001100": "l",
        "1001101": "m",
        "1001110": "n",
        "1001111": "o",
        "1010000": "p",
        "1010001": "q",
        "1010010": "r",
        "1010011": "s",
        "1010100": "t",
        "1010101": "u",
        "1010110": "v",
        "1010111": "w",
        "1011000": "x",
        "1011001": "y",
        "1011010": "z",
        "1011011": "{",
        "1011100": "|",
        "1011101": "}",
        "1011110": "~",
        "1011111": "a",
        "1100000": "b",
        "1100001": "c",
        "1100010": "d",
        "1100011": "e",
        "1100100": "f",
        "1100101": "g",
        "1100110": "h",
        "1100111": "i",
        "1101000": "j",
        "1101001": "k",
        "1101010": "l",
        "1101011": "m",
        "1101100": "n",
        "1101101": "o",
        "1101110": "p",
        "1101111": "q",
        "1110000": "r",
        "1110001": "s",
        "1110010": "t",
        "1110011": "u",
        "1110100": "v",
        "1110101": "w",
        "1110110": "x",
        "1110111": "y",
        "1111000": "z",
        "1111001": "A",
        "1111010": "B",
        "1111011": "C",
        "1111100": "D",
        "1111101": "E",
        "1111110": "F",
        "1111111": "G",
        " ": "0000000",
        "!": "0000001",
        "\"": "0000010",
        "#": "0000011",
        "$": "0000100",
        "%": "0000101",
        "&": "0000110",
        "'": "0000111",
        "(": "0001000",
        ")": "0001001",
        "*": "0001010",
        "+": "0001011",
        ",": "0001100",
        "-": "0001101",
        ".": "0001110",
        "/": "0001111",
        "0": "0010000",
        "1": "0010001",
        "2": "0010010",
        "3": "0010011",
        "4": "0010100",
        "5": "0010101",
        "6": "0010110",
        "7": "0010111",
        "8": "0011000",
        "9": "0011001",
        ":": "0011010",
        ";": "0011011",
        "<": "0011100",
        "=": "0011101",
        ">": "0011110",
        "?": "0011111",
        "@": "0100000",
        "A": "0100001",
        "B": "0100010",
        "C": "0100011",
        "D": "0100100",
        "E": "0100101",
        "F": "0100110",
        "G": "0100111",
        "H": "0101000",
        "I": "0101001",
        "J": "0101010",
        "K": "0101011",
        "L": "0101100",
        "M": "0101101",
        "N": "0101110",
        "O": "0101111",
        "P": "0110000",
        "Q": "0110001",
        "R": "0110010",
        "S": "0110011",
        "T": "0110100",
        "U": "0110101",
        "V": "0110110",
        "W": "0110111",
        "X": "0111000",
        "Y": "0111001",
        "Z": "0111010",
        "[": "0111011",
        "\\": "0111100",
        "]": "0111101",
        "^": "0111110",
        "_": "0111111",
        "`": "1000000",
        "a": "1000001",
        "b": "1000010",
        "c": "1000011",
        "d": "1000100",
        "e": "1000101",
        "f": "1000110",
        "g": "1000111",
        "h": "1001000",
        "i": "1001001",
        "j": "1001010",
        "k": "1001011",
        "l": "1001100",
        "m": "1001101",
        "n": "1001110",
        "o": "1001111",
        "p": "1010000",
        "q": "1010001",
        "r": "1010010",
        "s": "1010011",
        "t": "1010100",
        "u": "1010101",
        "v": "1010110",
        "w": "1010111",
        "x": "1011000",
        "y": "1011001",
        "z": "1011010",
        "{": "1011011",
        "|": "1011100",
        "}": "1011101",
        "~": "1011110"
    };
    let dataFixed = JSON.stringify(data);
    const jsonObj = JSON.parse(dataFixed);

    let binToConvertCopy = binToConvert;
    if (binToConvert.length % 7 !== 0){
        for (let i = 0; i < (binToConvertCopy.length % 7) + 1; i++){
            binToConvert += "0";
        }
    }
    let counter = 0;
    let bytesArray = [];
    let byte = "";

    for (let i = 0; i < binToConvert.length; i++) {
        byte += binToConvert[i];
        counter += 1;
        if (counter === 7) {
            counter = 0;
            bytesArray.push(byte);
            byte = "";
        }
    }

    let myStr = "";
    for (let i = 0; i < bytesArray.length; i++) {
        myStr += jsonObj[bytesArray[i]];
    }

    return myStr;
}

function convertHexToBin(hexToConvert) {
    let lookup = {
        '0': '0000',
        '1': '0001',
        '2': '0010',
        '3': '0011',
        '4': '0100',
        '5': '0101',
        '6': '0110',
        '7': '0111',
        '8': '1000',
        '9': '1001',
        'a': '1010',
        'b': '1011',
        'c': '1100',
        'd': '1101',
        'e': '1110',
        'f': '1111',
        'A': '1010',
        'B': '1011',
        'C': '1100',
        'D': '1101',
        'E': '1110',
        'F': '1111'
    };
    let ret = '';
    for (let i = 0, len = hexToConvert.length; i < len; i++) {
        ret += lookup[hexToConvert[i]];
    }
    return ret;
}

async function digestMessage(strToConvert) {
    const msgUint8 = new TextEncoder().encode(strToConvert);
    const hashBuffer = await crypto.subtle.digest('SHA-256', msgUint8);
    const hashArray = Array.from(new Uint8Array(hashBuffer));
    return hashArray.map(b => b.toString(16).padStart(2, '0')).join('');
}

async function getPassword() {
    let pKey = document.getElementById("pKeyID").value;
    let sKey = document.getElementById("sKeyID").value;
    let keySum = sKey + pKey;

    let hexPsw = await digestMessage(keySum);
    let binPsw = convertHexToBin(hexPsw);

    document.getElementById("returnPsw").innerHTML = convertBinToStr(binPsw);
}
